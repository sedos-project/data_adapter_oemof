# This workflow will install Python dependencies, run tests with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pytest

on:
  push:
    branches:
      - main
      - dev
      - release/*

  pull_request:


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10' ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install cbc
        run: sudo apt install coinor-cbc

      # Set up python envs
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          path: ${{ env.pythonLocation }}

      - name: Install poetry via pip
        run: python -m pip install poetry

      - name: Configure poetry
        run: python -m poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: python -m poetry install --no-interaction --no-root

      - name: Test with pytest
        run: python -m poetry run python -m pytest -svvv

#      - name: Lint
#        run: |
#          python setup.py check --strict --metadata --restructuredtext
#          check-manifest .
#          black --check .
#          flake8 src tests
#          isort --verbose --check-only --diff src tests
